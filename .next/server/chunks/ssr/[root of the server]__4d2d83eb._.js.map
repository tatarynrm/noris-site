{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_b50a0fbf.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_b50a0fbf-module__qubDfG__className\",\n  \"variable\": \"geist_b50a0fbf-module__qubDfG__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_b50a0fbf.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist%22,%22arguments%22:[{%22variable%22:%22--font-geist-sans%22,%22subsets%22:[%22latin%22],%22weight%22:[%22100%22,%22200%22,%22300%22,%22400%22,%22500%22,%22600%22,%22700%22,%22800%22,%22900%22]}],%22variableName%22:%22geistSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist', 'Geist Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_68a01160.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_mono_68a01160-module__YLcDdW__className\",\n  \"variable\": \"geist_mono_68a01160-module__YLcDdW__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_68a01160.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist_Mono%22,%22arguments%22:[{%22variable%22:%22--font-geist-mono%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist Mono', 'Geist Mono Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,0JAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,0JAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,0JAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file://D%3A/NORIS_PROJECTS/Noris_Work_Presentation/noris-site/components/common/header/header.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/common/header/header.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/common/header/header.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAuS,GACpU,qEACA","debugId":null}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file://D%3A/NORIS_PROJECTS/Noris_Work_Presentation/noris-site/components/common/header/header.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/common/header/header.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/common/header/header.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmR,GAChT,iDACA","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file://D%3A/NORIS_PROJECTS/Noris_Work_Presentation/noris-site/components/common/TextStyle/color-span/color-span.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { BotMessageSquare, CalendarSync, DatabaseZap, TentTree, Vibrate } from \"lucide-react\";\r\n\r\n// Тип для доступних кольорів\r\ntype ColorType = \"red\" | \"blue\" | \"yellow\" | \"green\" | \"orange\" | \"pink\";\r\ntype IconType = \"telegram\" | \"site\" | \"database\" | 'phone' | 'automatization'| null;\r\n\r\n// Компонент для кольорового тексту з іконкою\r\nconst ColorSpan = ({\r\n  text,\r\n  color,\r\n  icon,\r\n  ...props\r\n}: {\r\n  text: string;\r\n  color: ColorType;\r\n  icon: IconType;\r\n}) => {\r\n  // Функція для отримання кольору\r\n  const getColor = (color: ColorType) => {\r\n    switch (color) {\r\n      case \"red\":\r\n        return \"bg-red-500/50\";\r\n      case \"blue\":\r\n        return \"bg-blue-500/40\";\r\n      case \"yellow\":\r\n        return \"bg-yellow-500/50\";\r\n      case \"green\":\r\n        return \"bg-green-600/50\";\r\n      case \"orange\":\r\n        return \"bg-orange-600/50\";\r\n      case \"pink\":\r\n        return \"bg-pink-600/50\";\r\n      default:\r\n        return \"bg-green-500/50\"; // Це на випадок, якщо передано невідомий колір\r\n    }\r\n  };\r\n\r\n  // Функція для отримання іконки\r\n  const getIcon = (icon: IconType) => {\r\n    switch (icon) {\r\n      case \"telegram\":\r\n        return <BotMessageSquare className=\"\" size={40} />;\r\n      case \"site\":\r\n        return <TentTree className=\"\" size={40} />;\r\n      case \"database\":\r\n        return <DatabaseZap className=\"\" size={40} />;\r\n      case \"phone\":\r\n        return <Vibrate className=\"\" size={40} />;\r\n      case \"automatization\":\r\n        return <CalendarSync className=\"\" size={40} />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  // Отримуємо іконку\r\n  const Icon = getIcon(icon);\r\n\r\n  return (\r\n    <span className=\"relative flex gap-4\">\r\n         {Icon}\r\n      <span className=\"relative z-10 px-2 font-bold text-white text-2xl\">\r\n     \r\n        {text}\r\n        <span\r\n          className={`absolute inset-0 ${getColor(color)} rotate-2 rounded-lg transform -skew-y-2 p-3`}\r\n        ></span>\r\n    \r\n      </span>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default ColorSpan;\r\n"],"names":[],"mappings":";;;;AACA;AAAA;AAAA;AAAA;AAAA;;;AAMA,6CAA6C;AAC7C,MAAM,YAAY,CAAC,EACjB,IAAI,EACJ,KAAK,EACL,IAAI,EACJ,GAAG,OAKJ;IACC,gCAAgC;IAChC,MAAM,WAAW,CAAC;QAChB,OAAQ;YACN,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO,mBAAmB,+CAA+C;QAC7E;IACF;IAEA,+BAA+B;IAC/B,MAAM,UAAU,CAAC;QACf,OAAQ;YACN,KAAK;gBACH,qBAAO,8OAAC,kOAAA,CAAA,mBAAgB;oBAAC,WAAU;oBAAG,MAAM;;;;;;YAC9C,KAAK;gBACH,qBAAO,8OAAC,8MAAA,CAAA,WAAQ;oBAAC,WAAU;oBAAG,MAAM;;;;;;YACtC,KAAK;gBACH,qBAAO,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAU;oBAAG,MAAM;;;;;;YACzC,KAAK;gBACH,qBAAO,8OAAC,wMAAA,CAAA,UAAO;oBAAC,WAAU;oBAAG,MAAM;;;;;;YACrC,KAAK;gBACH,qBAAO,8OAAC,sNAAA,CAAA,eAAY;oBAAC,WAAU;oBAAG,MAAM;;;;;;YAC1C;gBACE,OAAO;QACX;IACF;IAEA,mBAAmB;IACnB,MAAM,OAAO,QAAQ;IAErB,qBACE,8OAAC;QAAK,WAAU;;YACV;0BACJ,8OAAC;gBAAK,WAAU;;oBAEb;kCACD,8OAAC;wBACC,WAAW,CAAC,iBAAiB,EAAE,SAAS,OAAO,4CAA4C,CAAC;;;;;;;;;;;;;;;;;;AAMtG;uCAEe","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file://D%3A/NORIS_PROJECTS/Noris_Work_Presentation/noris-site/components/common/footer/footer.tsx"],"sourcesContent":["import { Mail } from 'lucide-react'\r\nimport React from 'react'\r\nimport ColorSpan from '../TextStyle/color-span/color-span'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"bg-gray-800 text-white py-8\">\r\n      <div className=\"max-w-7xl mx-auto px-6 lg:px-8\">\r\n        <div className=\"flex flex-col lg:flex-row justify-between items-center\">\r\n          {/* Ліва частина футера: логотип або текст */}\r\n          <div className=\"mb-4 lg:mb-0\">\r\n            <h4  className=\"text-2xl font-semibold mb-4\">Noris Development</h4>\r\n          <ColorSpan text='Web-розробка' color='green' icon={null}/>\r\n          </div>\r\n\r\n          {/* Правая частина футера: посилання на Telegram бот */}\r\n          <div className=\"flex flex-col items-center lg:items-end space-y-2\">\r\n            <h5 className=\"text-lg font-semibold\">Зв'яжіться з нами</h5>\r\n            <a\r\n              href=\"https://t.me/noris_development_bot\" // замініть на свій Telegram-бот\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"flex items-center space-x-2 text-blue-400 hover:text-blue-500\"\r\n            >\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n                className=\"w-5 h-5\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"M12 19V6M5 12l7 7 7-7\"\r\n                />\r\n              </svg>\r\n              <span>Напишіть нам у Telegram</span>\r\n            </a>\r\n\r\n            {/* Електронна адреса */}\r\n            <a\r\n              href=\"mailto:tatarynrm@gmail.com\"\r\n              className=\"flex items-center space-x-2 text-blue-400 hover:text-blue-500\"\r\n            >\r\n <Mail/>\r\n              <span>tatarynrm@gmail.com</span>\r\n            </a>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Нижня частина футера: копірайт */}\r\n        <div className=\"text-center text-sm text-gray-400 mt-8\">\r\n          <p>&copy; 2025 Noris Development. Всі права захищені.</p>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,SAAS;IACb,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CAA8B;;;;;;8CAC/C,8OAAC,oKAAA,CAAA,UAAS;oCAAC,MAAK;oCAAe,OAAM;oCAAQ,MAAM;;;;;;;;;;;;sCAInD,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAAwB;;;;;;8CACtC,8OAAC;oCACC,MAAK,qCAAqC,gCAAgC;;oCAC1E,QAAO;oCACP,KAAI;oCACJ,WAAU;;sDAEV,8OAAC;4CACC,OAAM;4CACN,MAAK;4CACL,SAAQ;4CACR,QAAO;4CACP,WAAU;sDAEV,cAAA,8OAAC;gDACC,eAAc;gDACd,gBAAe;gDACf,aAAY;gDACZ,GAAE;;;;;;;;;;;sDAGN,8OAAC;sDAAK;;;;;;;;;;;;8CAIR,8OAAC;oCACC,MAAK;oCACL,WAAU;;sDAEvB,8OAAC,kMAAA,CAAA,OAAI;;;;;sDACQ,8OAAC;sDAAK;;;;;;;;;;;;;;;;;;;;;;;;8BAMZ,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;kCAAE;;;;;;;;;;;;;;;;;;;;;;AAKb;uCAEe","debugId":null}},
    {"offset": {"line": 463, "column": 0}, "map": {"version":3,"sources":["file://D%3A/NORIS_PROJECTS/Noris_Work_Presentation/noris-site/configs/auth.ts"],"sourcesContent":["import { AuthOptions, User, Account, Profile, Session } from \"next-auth\";\r\nimport GoogleProvider from \"next-auth/providers/google\";\r\nimport { JWT } from \"next-auth/jwt\";  // Імпортуємо тип JWT для коректної типізації токену\r\nimport { AdapterUser } from \"next-auth/adapters\";\r\n\r\n// Типізація для користувача\r\ninterface UserProfile extends User {\r\n  id: string;\r\n  email: string;\r\n  image?: string;  // Може бути необов'язковим\r\n  provider?: string;  // Зберігаємо провайдера (наприклад, 'google')\r\n  name?: string;  // Може бути необов'язковим\r\n}\r\n\r\n// Типізація для контексту JWT\r\ninterface CustomJWT extends JWT {\r\n  id?: string;\r\n  email?: string;\r\n  image?: string | null;  // Тепер дозволяємо null для image\r\n  name?: string;\r\n}\r\n\r\nexport const authConfig: AuthOptions = {\r\n  providers: [\r\n    // Google provider\r\n    GoogleProvider({\r\n      clientId: process.env.GOOGLE_CLIENT_ID!,\r\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET!,\r\n      authorization: {\r\n        params: {\r\n          prompt: 'select_account', // Примусове запитання про вибір акаунта\r\n          access_type: \"offline\",\r\n          response_type: \"code\",\r\n          scope:'openid profile email'\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n\r\n  pages: {\r\n    signIn: '/sign-in',  // Сторінка для входу\r\n    error: '/auth-error',  // Сторінка для обробки помилок\r\n    signOut: '/sign-out',  // Сторінка для виходу\r\n  },\r\n\r\n  session: {\r\n    maxAge: 864000,  // Тривалість сесії 10 діб\r\n    updateAge: 0,    // Без оновлення сесії під час активності\r\n    strategy: \"jwt\", // Використовуємо JWT для зберігання сесії\r\n  },\r\n  \r\n  jwt: {\r\n    secret: process.env.JWT_SECRET!,  // Секрет для JWT токену\r\n    maxAge: 864000,  // Тривалість JWT 10 діб\r\n  },\r\n\r\n  callbacks: {\r\n    // // Callback для jwt\r\n    // async jwt({ token, user, account, profile, trigger }: { token: CustomJWT; user?: UserProfile; account?: Account | null; profile?: Profile; trigger?: string; }): Promise<JWT> {\r\n    //   if (user) {\r\n    //     // Зберігаємо дані користувача в токені\r\n    //     token.id = user.id;\r\n    //     token.email = user.email || ''; // Перевірка, щоб не було null\r\n    //     token.image = user.image || ''; // Перевірка, щоб не було null\r\n    //     token.name = user.name || ''; // Перевірка, щоб не було null\r\n    //   }\r\n    //   return token;  // Якщо користувача немає, повертаємо токен без змін\r\n    // },\r\n\r\n    // Callback для сесії\r\n    async session({ session, token }: { session: Session; token: JWT }): Promise<Session> {\r\n      if (!token) {\r\n        return session;  // Якщо токен закінчився, повертаємо існуючу сесію\r\n      }\r\n\r\n\r\n      // // Оновлюємо дані сесії за допомогою токену\r\n      // session.user.id = token.id as string;\r\n      // session.user.email = token.email as string;\r\n      // session.user.image = token.image as string;\r\n      // session.user.name = token.name as string;\r\n\r\n      console.log('SESSION DATA', session);\r\n      return session;\r\n    },\r\n\r\n    // Callback для редиректу\r\n    async redirect({ url, baseUrl }: { url: string; baseUrl: string }): Promise<string> {\r\n      // Якщо редирект починається з базового URL, то повертаємо його\r\n      console.log('BASE URL',baseUrl);\r\n      \r\n      if (url.startsWith(baseUrl)) {\r\n        return url;\r\n      }\r\n      // Повертаємо редирект на домашню сторінку після входу через Google\r\n      return `${baseUrl}/`;\r\n    },\r\n\r\n    // Callback для обробки входу\r\n    async signIn({ account, profile }: { account: Account | null; profile?: Profile }): Promise<boolean> {\r\n      if (account?.provider === \"google\") {\r\n        console.log('Google Profile:', profile);\r\n        console.log('Google Account:', account);\r\n      }\r\n      return true;  // Дозволяємо інші провайдери без перевірки email\r\n    },\r\n  },\r\n};\r\n\r\nexport default authConfig;\r\n"],"names":[],"mappings":";;;;AACA;;AAqBO,MAAM,aAA0B;IACrC,WAAW;QACT,kBAAkB;QAClB,CAAA,GAAA,mJAAA,CAAA,UAAc,AAAD,EAAE;YACb,UAAU,QAAQ,GAAG,CAAC,gBAAgB;YACtC,cAAc,QAAQ,GAAG,CAAC,oBAAoB;YAC9C,eAAe;gBACb,QAAQ;oBACN,QAAQ;oBACR,aAAa;oBACb,eAAe;oBACf,OAAM;gBACR;YACF;QACF;KACD;IAED,OAAO;QACL,QAAQ;QACR,OAAO;QACP,SAAS;IACX;IAEA,SAAS;QACP,QAAQ;QACR,WAAW;QACX,UAAU;IACZ;IAEA,KAAK;QACH,QAAQ,QAAQ,GAAG,CAAC,UAAU;QAC9B,QAAQ;IACV;IAEA,WAAW;QACT,sBAAsB;QACtB,kLAAkL;QAClL,gBAAgB;QAChB,8CAA8C;QAC9C,0BAA0B;QAC1B,qEAAqE;QACrE,qEAAqE;QACrE,mEAAmE;QACnE,MAAM;QACN,wEAAwE;QACxE,KAAK;QAEL,qBAAqB;QACrB,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAoC;YAChE,IAAI,CAAC,OAAO;gBACV,OAAO,SAAU,kDAAkD;YACrE;YAGA,8CAA8C;YAC9C,wCAAwC;YACxC,8CAA8C;YAC9C,8CAA8C;YAC9C,4CAA4C;YAE5C,QAAQ,GAAG,CAAC,gBAAgB;YAC5B,OAAO;QACT;QAEA,yBAAyB;QACzB,MAAM,UAAS,EAAE,GAAG,EAAE,OAAO,EAAoC;YAC/D,+DAA+D;YAC/D,QAAQ,GAAG,CAAC,YAAW;YAEvB,IAAI,IAAI,UAAU,CAAC,UAAU;gBAC3B,OAAO;YACT;YACA,mEAAmE;YACnE,OAAO,GAAG,QAAQ,CAAC,CAAC;QACtB;QAEA,6BAA6B;QAC7B,MAAM,QAAO,EAAE,OAAO,EAAE,OAAO,EAAkD;YAC/E,IAAI,SAAS,aAAa,UAAU;gBAClC,QAAQ,GAAG,CAAC,mBAAmB;gBAC/B,QAAQ,GAAG,CAAC,mBAAmB;YACjC;YACA,OAAO,MAAO,iDAAiD;QACjE;IACF;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 551, "column": 0}, "map": {"version":3,"sources":["file://D%3A/NORIS_PROJECTS/Noris_Work_Presentation/noris-site/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\nimport { Geist, Geist_Mono } from \"next/font/google\";\nimport \"./globals.css\";\nimport Header from \"@/components/common/header/header\";\nimport Footer from \"@/components/common/footer/footer\";\nimport { AuthProvider } from \"@/lib/SessionProvider\";\nimport { SessionProvider } from \"next-auth/react\";\nimport { getServerSession } from \"next-auth\";\nimport authConfig from \"@/configs/auth\";\n\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n  weight: [\"100\", \"200\", \"300\", \"400\", \"500\", \"600\", \"700\", \"800\", \"900\"],\n});\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n});\n\nexport const metadata: Metadata = {\n  title: \"Noris Development | Розробка програмного забезпечення\",\n  description: \"Noris Development - Світ сучасних технологій\",\n  openGraph: {\n    title: \"Noris Development | Розробка програмного забезпечення\",\n    description: \"Noris Development - Світ сучасних технологій\",\n    url: \"https://noris-dev.site\",\n    images: [\n      {\n        url: \"https://noris-dev.site/images/jpeg/noris.jpg\", // URL вашої Open Graph картинки\n        width: 1200,\n        height: 630,\n        alt: \"Noris Development Image\",\n      },\n    ],\n  },\n};\n\nexport default async  function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  const session = await  getServerSession(authConfig)\n  console.log('LayoutTsx',session);\n  \n  return (\n  \n\n\n    <html lang=\"en\">\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased relative`}\n      >\n        <Header session={session} />\n\n\n\n        <main className=\"relative flex min-h-screen flex-col\">{children}</main>\n     \n        <Footer />\n      </body>\n    </html>\n\n  );\n}\n"],"names":[],"mappings":";;;;;;;AAGA;AACA;AAGA;AACA;;;;;;;;;AAaO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;IACb,WAAW;QACT,OAAO;QACP,aAAa;QACb,KAAK;QACL,QAAQ;YACN;gBACE,KAAK;gBACL,OAAO;gBACP,QAAQ;gBACR,KAAK;YACP;SACD;IACH;AACF;AAEe,eAAgB,WAAW,EACxC,QAAQ,EAGR;IACA,MAAM,UAAU,MAAO,CAAA,GAAA,qIAAA,CAAA,mBAAgB,AAAD,EAAE,+GAAA,CAAA,UAAU;IAClD,QAAQ,GAAG,CAAC,aAAY;IAExB,qBAIE,8OAAC;QAAK,MAAK;kBACT,cAAA,8OAAC;YACC,WAAW,GAAG,yIAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,8IAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,qBAAqB,CAAC;;8BAE7E,8OAAC,yIAAA,CAAA,UAAM;oBAAC,SAAS;;;;;;8BAIjB,8OAAC;oBAAK,WAAU;8BAAuC;;;;;;8BAEvD,8OAAC,yIAAA,CAAA,UAAM;;;;;;;;;;;;;;;;AAKf","debugId":null}}]
}